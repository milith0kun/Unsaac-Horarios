generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Facultad {
  id        Int       @id @default(autoincrement())
  nombre    String
  codigo    String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  aulas     Aula[]
  escuelas  Escuela[]

  @@map("facultades")
}

model Escuela {
  id         Int      @id @default(autoincrement())
  nombre     String
  codigo     String   @unique
  director   String?
  duracion   String?
  modalidad  String   @default("Presencial")
  grados     String?
  facultadId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  cursos     Curso[]
  facultad   Facultad @relation(fields: [facultadId], references: [id], onDelete: Cascade)

  @@map("escuelas")
}

model Aula {
  id                Int       @id @default(autoincrement())
  codigo            String    @unique
  nombre            String
  tipo              String
  capacidad         Int
  edificio          String
  piso              Int
  equipamiento      String?
  softwareInstalado String?
  estado            String    @default("Disponible")
  responsable       String?
  facultadId        Int
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  facultad          Facultad  @relation(fields: [facultadId], references: [id], onDelete: Cascade)
  horarios          Horario[]

  @@map("aulas")
}

model Curso {
  id         Int       @id @default(autoincrement())
  codigo     String    @unique
  nombre     String
  creditos   Int       @default(0)
  semestre   String
  requisitos String?
  escuelaId  Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  escuela    Escuela   @relation(fields: [escuelaId], references: [id], onDelete: Cascade)
  horarios   Horario[]

  @@map("cursos")
}

model Horario {
  id         Int      @id @default(autoincrement())
  dia        String
  horaInicio Int
  horaFin    Int
  tipo       String
  grupo      String   @default("A")
  modalidad  String   @default("Presencial")
  semestre   String
  cursoId    Int
  aulaId     Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  aula       Aula?    @relation(fields: [aulaId], references: [id])
  curso      Curso    @relation(fields: [cursoId], references: [id], onDelete: Cascade)

  @@map("horarios")
}
